<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="ChatDAO">
   <!-- 방 존재 여부 확인 & 방정보 가져오기 -->
   <select id="getRoom" parameterType="java.lang.String" resultType="com.utf18.site.vo.ChatVO">
  	   SELECT * FROM CHAT WHERE NAME =#{name} AND REMAINCOUNT !=0
   </select>
   
   <!-- 세션ID / owner비교 -->
   <select id="getChatOwner" resultType="com.utf18.site.vo.ChatVO">
	   SELECT * FROM CHAT
	   WHERE owner = #{owner}
   </select>
  
   <!-- 방 생성 -->
   <insert id="createChatRoom" parameterType="com.utf18.site.vo.ChatVO">
	   INSERT INTO CHAT (NUM, NAME, FILTERWORD, TOTALCOUNT,REMAINCOUNT, CONTENT, OWNER)
	   VALUES(CHAT_SEQ.NEXTVAL, #{name}, #{filterword},300, 0, #{content}, #{owner})
   </insert>
   
   <!-- 존재하는 방 리스트가져오기 -->
   <select id="getRoomList" resultType="com.utf18.site.vo.ChatVO">
	   SELECT * FROM CHAT
	   WHERE REMAINCOUNT !=0
   </select>
   
   <!-- 현재 어떤 방에 들어가있는지 데이터추가하기 -->
   <insert id="addRoomMember" parameterType="com.utf18.site.vo.ChatVO">
   		INSERT INTO CHATMEMBER(NUM, ID, ROOM, PRIROOM, WARNINGCOUNT, CHATSTATUS) VALUES(CHAT_MEMBER_SEQ.NEXTVAL, #{id}, #{room}, #{priroom}, 0, 'NOMAL')
   </insert>
   
   <!-- 현재 아이디가 어떤방에 들어가있는지 확인 -->
   <select id="getRoomMember" parameterType="com.utf18.site.vo.ChatMemberVO" resultType="com.utf18.site.vo.ChatMemberVO">
	   SELECT ID,ROOM,PRIROOM, WARNINGCOUNT
	   FROM CHATMEMBER
	   WHERE ID = #{id}
   </select>
   
   <!-- 같은 방에 존재하는 사람정보 모두가져오기 -->
   <select id="sameRoomList" parameterType="com.utf18.site.vo.ChatMemberVO" resultType="com.utf18.site.vo.ChatMemberVO">
	   SELECT ID, ROOM, PRIROOM
	   FROM CHATMEMBER
	   WHERE ROOM=#{room}
   </select>
   
   <!-- 방변경 -->
   <update id="updateRoomMember" parameterType="com.utf18.site.vo.ChatMemberVO">
   	  UPDATE CHATMEMBER SET ROOM = #{room} 
   	  WHERE ID= #{id}
   </update>
   
   <!-- 방정보 제거-->
   <delete id="deleteRoomMember" parameterType="com.utf18.site.vo.ChatMemberVO">
   	  DELETE FROM CHATMEMBER
   	  WHERE ID=#{id}
   </delete>
   
   <!-- 채팅방 입장 count증가 : Controller에서 처리-->
   <update id="updateChatCountInc" parameterType="com.utf18.site.vo.ChatMemberVO">
      UPDATE CHAT SET REMAINCOUNT = REMAINCOUNT + 1
      WHERE NAME = #{name}
   </update>
   
   <!-- 채팅방 입장 count감소 : Controller에서 처리-->
   <update id="updateChatCountDec" parameterType="com.utf18.site.vo.ChatMemberVO">
      UPDATE CHAT SET REMAINCOUNT = REMAINCOUNT - 1
      WHERE NAME = #{name}
   </update>
   
   <!-- 채팅방 삭제 : REMAINCOUNT가 0이되면 삭제한다. -->
   <delete id="deleteChat">
      DELETE FROM CHAT
      WHERE REMAINCOUNT = 0
   </delete>
   
   <!-- 검색한 방 리스트가져오기 -->
   <select id="searchRoomList" resultType="com.utf18.site.vo.ChatMemberVO" parameterType="java.lang.String">
   SELECT * FROM CHAT
   WHERE REMAINCOUNT !=0 AND NAME LIKE '%'||#{name}||'%'
   </select>
   
   <!-- 이미지(썸네일) 파일 추가하기 -->
   <insert id="addThumbnail" parameterType="com.utf18.site.vo.ChatMemberVO">
   INSERT INTO CHAT VALUES()
   </insert>
   
   <!-- 방 정보 가져오기 -->
   <select id="getRoomInfo" resultType="com.utf18.site.vo.ChatVO" parameterType="java.lang.String">
   SELECT * FROM CHAT WHERE NAME = #{name}
   </select>
   
   <!-- 채팅내용 chatlog DB에 삽입하기  -->
   <insert id="addChatLog" parameterType="com.utf18.site.vo.ChatLogVO">
   INSERT INTO CHATLOG(EMAIL, CONTENT, NUM) VALUES(#{email}, #{content}, #{num})
   </insert>
   
   <select id="getChatLog" parameterType="java.lang.Integer" resultType="com.utf18.site.vo.ChatLogVO">
   SELECT * FROM CHATLOG
   WHERE NUM = #{num}
   </select>
   
   <select id="getFilterword" parameterType="java.lang.String" resultType="java.lang.String">
   SELECT FILTERWORD FROM CHAT
   WHERE NAME = #{name}
   </select>
   
   <update id="plusWarningCount" parameterType="java.lang.String">
   UPDATE CHATMEMBER SET WARNINGCOUNT = WARNINGCOUNT + 1
   WHERE ID = #{id}
   </update>
   
   <select id="getWarningCount" parameterType="java.lang.String" resultType="java.lang.Integer">
   SELECT WARNINGCOUNT FROM CHATMEMBER WHERE ID = #{id}
   </select>
   
   <update id="updateChatStatus" parameterType="java.lang.String">
   UPDATE CHATMEMBER SET CHATSTATUS = 'NOCHAT'
   WHERE ID= #{id}
   </update>
   
   <select id="getChatStatus" parameterType="java.lang.String" resultType="java.lang.String">
   SELECT CHATSTATUS FROM CHATMEMBER WHERE ID = #{id}
   </select>
   
   <update id="updateBadwordStatus" parameterType="java.lang.String">
   UPDATE CHATLOG SET BADWORD = '1'
   WHERE ID = #{id}
   </update>
   
   <select id="getTime"  resultType="java.lang.String">
   SELECT TO_CHAR(SYSDATE, 'yyyymmddhh24miss') FROM DUAL
   </select>
   
  
</mapper>